on:
  push:
    branches:
      - master

name: Apdate multi images docker React App and deploy it to Amazon ECS 
jobs:

  deployment:
    name: Deploy New version of App to ECS 
    runs-on: ubuntu-latest
    steps:
      - name: Git clone our REPO
        uses: actions/checkout@v2
      
      - name: update DB Credentials&Endpoints
        run: |
          sed -i "s/POSTGRES_USER/${{ secrets.POSTGRES_USER }}/g" task-definition.json
          sed -i "s/POSTGRES_PASSWORD/${{ secrets.POSTGRES_PASSWORD }}/g" task-definition.json
          sed -i "s/POSTGRESS_HOST/${{ secrets.POSTGRESS_HOST }}/g" task-definition.json
          sed -i "s/REDIS_ENDPOINT/${{ secrets.REDIS_ENDPOINT }}/g" task-definition.json
          sed -i "s/POSTGRES_DB/${{ secrets.POSTGRES_DB }}/g" task-definition.json
          
      - name: update image URL
        run: |
          sed -i "s/ECR/${{ secrets.ECR_PREF }}/g" task-definition.json
          sed -i "s/ECR/${{ secrets.ECR_PREF }}/g" task-definition.json
          sed -i "s/ECR/${{ secrets.ECR_PREF }}/g" task-definition.json
          sed -i "s/ECR/${{ secrets.ECR_PREF }}/g" task-definition.json
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: render-task-definition and update service
        run: |
          aws ecs register-task-definition --family multi-docker-task-definition --cli-input-json file://task-definition.json
          aws ecs update-service --cluster multi-docker --service multi-docker-service --task-definition multi-docker-task-definition
