on:
  push:
    branches:
      - master

name: Deploy to Amazon ECS 

jobs:
 # build_test_push:    
 #   name: Test&build and push new images to Dockerhub
 #   runs-on: ubuntu-latest
 #   steps:
 #     - name: Git clone our REPO
 #       uses: actions/checkout@v2
 #    - name: Test phase 
 #       run: |
 #           docker build -t kosdockerid/react-test -f ./client/Dockerfile.dev ./client
 #           docker run kosdockerid/react-test npm test -- --coverage
 #     - name: Build phase  
 #       run: |    
 #          docker build -t kosdockerid/multi-client ./client
 #          docker build -t kosdockerid/multi-nginx ./nginx
 #          docker build -t kosdockerid/multi-server ./server
 #          docker build -t kosdockerid/multi-worker ./worker
 #     - name: Login to Dockerhub 
 #       run: echo ${{ secrets.DOCKER_PASSWORD}} | docker login -u ${{ secrets.DOCKER_ID}} --password-stdin
 #     - name: Push images to Dockerhub 
 #       run: | 
 #          docker push kosdockerid/multi-client
 #          docker push kosdockerid/multi-nginx
 #          docker push kosdockerid/multi-server
 #          docker push kosdockerid/multi-worker
 #     
 #      
  deployment:
    name: Deploy New version of App to ECS 
    runs-on: ubuntu-latest
    needs: [build_test_push] 
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
      - name: Render Amazon ECS task definition for first container
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: client
          image: kosdockerid/multi-client
      - name: Render Amazon ECS task definition for second container
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: server
          image: kosdockerid/multi-server
      - name: Render Amazon ECS task definition for third container
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: worker
          image: kosdockerid/multi-worker
      - name: Render Amazon ECS task definition for fourth container
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: nginx
          image: kosdockerid/multi-nginx

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: multi-docker-service
          cluster: multi-docker 
          wait-for-service-stability: true

Â© 2020 GitHub, Inc.
