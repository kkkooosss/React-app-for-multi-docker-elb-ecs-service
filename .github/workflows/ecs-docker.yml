on:
  push:
    branches:
      - master

name: Deploy to Amazon ECS 
jobs:
  deployment:
    name: Deploy New version of App to ECS 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
    
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Render Amazon ECS task definition for first container
        id: render-client-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: client
          image: kosdockerid/multi-client
      - name: Render Amazon ECS task definition for second container
        id: render-server-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ steps.render-client-container.outputs.task-definition }}
          container-name: server
          image: kosdockerid/multi-server
      - name: Render Amazon ECS task definition for third container
        id: render-worker-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ steps.render-server-container.outputs.task-definition }}
          container-name: worker
          image: kosdockerid/multi-worker
      - name: Render Amazon ECS task definition for fourth container
        id: nginx
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ steps.render-worker-container.outputs.task-definition }}
          container-name: nginx
          image: kosdockerid/multi-nginx

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: multi-docker-service
          cluster: multi-docker 
          wait-for-service-stability: true
