on:
  push:
    branches:
      - master

name: Apdate multi images docker React App and deploy it to Amazon ECS 
jobs:
  build_test_push:    
    name: Test&build and push new images to Dockerhub
    runs-on: ubuntu-latest
    steps:
      - name: Git clone our REPO
        uses: actions/checkout@v2
      #- name: Test phase 
        #run: |
           #docker build -t kosdockerid/react-test -f ./client/Dockerfile.dev ./client
           #docker run kosdockerid/react-test npm test -- --coverage
      - name: Build phase  
        run: |    
           docker build -t multi-client ./client
           docker build -t multi-nginx ./nginx
           docker build -t multi-server ./server
           docker build -t multi-worker ./worker
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to ECR 
        run: aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_PREF }}
      - name: Push images to ECR 
        run: | 
           docker tag multi-client:latest ${{ secrets.ECR_PREF }}/multi-client:latest
           docker tag multi-nginx:latest  ${{ secrets.ECR_PREF }}/multi-nginx:latest
           docker tag multi-server:latest ${{ secrets.ECR_PREF }}/multi-server:latest
           docker tag multi-worker:latest ${{ secrets.ECR_PREF }}/multi-worker:latest          
           docker push ${{ secrets.ECR_PREF }}/multi-client:latest
           docker push ${{ secrets.ECR_PREF }}/multi-server:latest
           docker push ${{ secrets.ECR_PREF }}/multi-nginx:latest
           docker push ${{ secrets.ECR_PREF }}/multi-worker:latest    
      
      - name: update DB Credentials&Endpoints
        run: |
          sed -i "s/POSTGRES_USER/${{ secrets.POSTGRES_USER }}/g" task-definition.json
          sed -i "s/POSTGRES_PASSWORD/${{ secrets.POSTGRES_PASSWORD }}/g" task-definition.json
          sed -i "s/POSTGRESS_HOST/${{ secrets.POSTGRESS_HOST }}/g" task-definition.json
          sed -i "s/REDIS_ENDPOINT/${{ secrets.REDIS_ENDPOINT }}/g" task-definition.json
          sed -i "s/POSTGRES_DB/${{ secrets.POSTGRES_DB }}/g" task-definition.json
  
  deployment:
    name: Deploy New version of App to ECS 
    runs-on: ubuntu-latest
    needs: [build_test_push] 
    steps:
      - name: Git clone our REPO
        uses: actions/checkout@v2
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: render-task-definition and update service
        run: |
          aws ecs register-task-definition --family multi-docker-task-definition --cli-input-json file://task-definition.json
          aws ecs update-service --cluster multi-docker --service multi-docker-service --task-definition multi-docker-task-definition
